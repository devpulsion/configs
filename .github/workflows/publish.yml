name: publish
on:
  release:
    types: [published]

env:
  CI: true
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add version file
        run: echo ${{ github.event.release.tag_name }} > VERSION
      - name: Commit version file
        uses: EndBug/add-and-commit@v4
        with:
          add: 'VERSION'
          author_name: devpulsion
          author_email: devpulsion@users.noreply.github.com
          force: true
          message: 'ci: add version file v${{ github.event.release.tag_name }}'
          ref: 'master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
          registry-url: https://registry.npmjs.org/
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install
        run: yarn install
      - name: Tag Check
        id: tag_check
        shell: bash -ex {0}
        run: |
          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${VERSION}"
          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
            -H "Authorization: token ${GITHUB_TOKEN}")
          if [ "$http_status_code" -ne "404" ] ; then
            echo "::set-output name=exists_tag::true"
          else
            echo "::set-output name=exists_tag::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.event.release.tag_name }}
      - name: Create Git Tag
        if: steps.tag_check.outputs.exists_tag == 'false'
        uses: azu/action-package-version-to-git-tag@v1
        with:
          version: ${{ github.event.release.tag_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      - name: Publish
        if: steps.tag_check.outputs.exists_tag == 'false'
        run: |
          yarn lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ github.event.release.tag_name }} is released ðŸŽ‰'
            })
